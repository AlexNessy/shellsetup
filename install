#!/bin/bash 
# colours for shellsetup logo
GREEN='\033[0;32m'
NC='\033[0m'

currentDir=$PWD

# while loop vars
Menu=1
AliasMenu=1

# package list for -p flag
packageList=(
  "github-cli"
  "gh"
  "cmatrix"
  "neofetch"
  "btop"
  "git"
  "neovim"
  "fastfetch"
  "zsh"
  "bat"
  "smbclient"
  "tldr"
  "fzf"
  "wget"
  "fd"
  "tmux"
)

alias=(
  "alias nv='nvim'" 
  "alias sp='sudo pacman'" 
  "alias chx='chmod +x'" 
  "alias gitc='git add .; git commit -m $newChanges; git push'"
  "alias rsync-copy='rsync -avzPh'" 
  "alias rsync-move='rsync -avzPh --remove-source-files'" 
  "alias rsync-update='rsync -avzuPh'" 
  "alias rsync-synchronize='rsync -avzuPh --delete'"
)

print_usage() {
  echo "Usage: -p - list packages"
}

# used for -p flag
printPackages(){
  for i in "${packageList[@]}"
  do
    echo "$i"
  done
}

# flags
while getopts 'p' flag; do
  case "$flag" in
    p) printPackages; exit;;
    *) print_usage
    exit 1 ;;
  esac
done

# check package manager and set install function
whichPM(){
  which "$1" > /dev/null 2>&1
  local exitCode=$?
  [[ ${exitCode} == 0 ]] && checker(){ sudo "$1" "$2" '"$1"'; }  && checkerVar=1
}

whichPM dnf "-y install"
whichPM pacman "-S --no-confirm --needed"
whichPM apt "-y install"
  
[[ -z $checkerVar ]] && echo "Your package manager is not supported yet"

# 1st input for shell, 2nd input for type of config
shellInstall(){
  checker "$1"
  Shell=$(which "$1")
  if [[ $SHELL != "$Shell" ]]; then
    chsh -s "$Shell"
  fi
  if [[ $2 = "full" ]]; then
    if [[ $1 == "zsh" ]]; then
      # ohmyzsh installation
      wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O - | sed s/RUNZSH:-yes/RUNZSH:-no/g | sh > /dev/null 2>&1
      # plugins installation
      git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions 
      git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting 
      git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.oh-my-zsh/custom/themes/powerlevel10k
      git clone https://github.com/agkozak/zsh-z ~/.oh-my-zsh/custom/plugins/zsh-z
      git clone --depth 1 https://github.com/unixorn/fzf-zsh-plugin.git ~/.oh-my-zsh/custom/plugins/fzf-zsh-plugin
      git clone https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/gh ~/.oh-my-zsh/plugins/gh
      git clone https://github.com/zshzoo/magic-enter ~/.oh-my-zsh/custom/plugins/magic-enter
      # plugins integration
      sed -i 's/plugins=(git)/plugins=(git zsh-autosuggestions zsh-syntax-highlighting zsh-z fzf gh magic-enter colored-man-pages)/g' ~/.zshrc
      sed -i 's@robbyrussell@powerlevel10k/powerlevel10k@g' ~/.zshrc
    elif [[ $1 == "bash" ]]; then
      # ohmybash installation
      bash -c "$(wget https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh -O -)" --unattended
    fi
  fi
  # aliases add
  grep -q 'alias sp=' ~/."$1"rc
  grepCode=$?
  if [ "$grepCode" != 0 ]; then
      echo -e "${alias[@]}" >> ~/."$1"rc
      aliases ~/."$1"rc
  fi
  /bin/"$1" -c "source ~/.$1rc"
  clear
  echo "changes made and applied! you can now restart your terminal"
}

aliases(){
  clear
  while [[ $AliasMenu = 1 ]]; do
    echo -e "Any aliases you want to add?\n (1) Yes\n (2) No\n (3) List Current Aliases"
    read -r aliasChoice
    if [[ "$aliasChoice" == "1" ]]; then
      echo "Alias Command (use '' instead of double quotes if you need to):"
      read -r aliasCmd
      echo "What alias do you want to use for this command?:"
      read -r aliasName
      echo -e "alias $aliasName=$aliasCmd" >> "$1"
      echo -e "Do you want to add another alias?\n (1) Yes\n (2) No"
      read -r aliasMenuChoice
      if [[ $aliasMenuChoice == 2 ]]; then
        AliasMenu=0
      fi
    elif [[ "$aliasChoice" == "2" ]]; then
      AliasMenu=0
    elif [[ "$aliasChoice" == "3" ]]; then
      grep "^alias.*" "$1"
    fi
  done
}

nvimconfig(){
  echo -e "Do you want nvim config too? (Current config will be backed up)\n (1) Yes\n (2) No"
  read -r nvimconfig
  if [[ $nvimconfig == 1 ]]; then
    random=$RANDOM
    find ~/.config -type d -name "nvim" && rsync -avPh ~/.config/nvim/ ~/.config/nvim."$random".bak && rm -rf ~/.config/nvim
    git clone https://github.com/alexnessy/nvim-config
    cp -r nvim-config/nvim ~/.config/
    rm -rf nvim-config
  fi
}

# temporary fix for 'New Changes' in git commit message
newChanges='"New Changes"'
clear
echo "Welcome to..."
echo -e " ${GREEN}
         __         ____          __            
   _____/ /_  ___  / / /_______  / /___  ______  
  / ___/ __ \/ _ \/ / / ___/ _ \/ __/ / / / __ \ 
 (__  ) / / /  __/ / (__  )  __/ /_/ /_/ / /_/ / 
/____/_/ /_/\___/_/_/____/\___/\__/\__,_/ .___/  
                                       /_/      ${NC}"
while [[ $Menu == 1 ]]; do
  echo -e "Do you want:\n(1) Full setup \n(2) Light setup \n(3) More info"
  read -r choice
  if [[ $choice != 1 ]] && [[ $choice != 2 ]] && [[ $choice != 3 ]]; then
      exit
  elif [[ $choice == 3 ]]; then
    echo -e "The full setup consists of all customisation options including setting the chosen shell as default, aliases, oh my (shell) installation and plugins. \nThe light setup consists of only setting the default shell without aliases and other features. To list packages, run with -p flag."
  elif [[ $choice == 1 ]] || [[ $choice == 2 ]]; then
    echo -e "What shell do you want to use? \n(1) zsh \n(2) bash \n(3) skip shell config"
    read -r shell
    [[ $shell != 1 ]] && [[ $shell != 2 ]] && [[ $shell != 3 ]] && exit
    Menu=0
  fi
done
# install packages
for i in "${packageList[@]}"
do
  checker "$i"
done

# install yay (change for paru later)
if [[ $pacmanCode == 0 ]]; then
  which paru
  whichCode=$?
  if [[ $whichCode != 0 ]]; then
    sudo pacman -S --needed --noconfirm base-devel git
    git clone https://aur.archlinux.org/paru.git
    cd paru || exit
    makepkg -si --noconfirm
    cd ..
    rm -rf paru
    cd "$currentDir" || exit
  fi
fi

# add font to make sure it's available
if [[ $shell == 1 ]] && [[ $choice == 1 ]]; then
  find ~/.local/share/fonts -type f -name "MesloLGS NF Regular\.ttf" 
  findCode=$?
  if [[ $findCode != 0 ]]; then
    wget "https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS NF Regular.ttf"
    mkdir -p ~/.local/share/fonts
    mv 'MesloLGS NF Regular.ttf' ~/.local/share/fonts
  fi
fi

echo "All packages installed"
 
if [[ $choice == 1 ]]; then
    if [[ $shell == 1 ]]; then
      shellInstall zsh full
    else
      shellInstall bash full
    fi
elif [[ $choice == 2 ]]; then
    if [[ $shell == 1 ]]; then
      shellInstall zsh lite
    else
      shellInstall bash lite
    fi
fi

nvimconfig

[[ $choice == 1 ]] && [[ $shell == 1 ]] && echo "All changes made! Restart terminal for configuration of CLI. Make sure to change terminal font to MesloLGS NF." && exit
echo -e "All changes made.\nEnjoy!"
